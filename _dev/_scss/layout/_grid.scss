/**
 *  Warning: we can't use slash as a division anymore - use sass:math instead, see:
 *  https://sass-lang.com/documentation/breaking-changes/slash-div
 */
@use "sass:math";

$grid_gutter_width: 1.25rem;

/** 

Viewport grid with gutter is tricky to stay true-to-project because CSS Grid adds extra gutters for white-space margins,
so we need to take it into account when calculating rows; However, this results in content width to be slightly off, and on mobile (without white space margins) the first and last gutter would take extra space;

**/

//Variant A: row with gutter true to project
// $row: math.div($viewport_width - 11 * $grid_gutter_width, 12);

//Variant B: row without gutter; container width true to project
$row: math.div($viewport_width, 12);

.grid--viewport {
    display: grid;
    grid-template-columns: auto [viewport-start] repeat(12, 1fr) [viewport-end] auto;
    grid-template-rows: auto;

    //grid-template-columns: 1fr [viewport-start] repeat(12, minmax(auto, $row)) [viewport-end] 1fr;

    @media all and (min-width: $viewport_width + 1px) {
        grid-template-columns: 1fr [viewport-start] repeat(12, minmax(auto, $row)) [viewport-end] 1fr;
        // grid-gap: $grid_gutter_width;
    }
}

.grid--content {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: 0 $grid_gutter_width;
}

.grid--two-columns {
    display: grid;
    grid-gap: 2rem;

    @media all and (min-width: $breakpoint_mobile + 1px) {
        grid-template-columns: 1fr 1fr;
        grid-gap: 3rem;
    }
    @media all and (min-width: $breakpoint_hd + 1px) {
        grid-gap: 4rem;
    }
}

.grid--three-columns {
    display: grid;
    grid-row-gap: 1rem;

    @media all and (min-width: $breakpoint_mobile + 1px) {
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 2rem 2rem;
    }
}
